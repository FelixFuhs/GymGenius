name: Python Verification Suite

on:
  push:
    branches: [ main ] # Or your primary development branch
  pull_request:
    branches: [ main ] # Or your primary development branch

jobs:
  verify:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11'] # Or your target Python versions

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-mock # For unit tests
        pip install papermill pandas numpy matplotlib seaborn scikit-learn # For notebook
        # Add any other specific dependencies from your project's requirements.txt
        # e.g., if your main application has a requirements.txt:
        # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        # If the 'engine' is a package, it would need to be installed (e.g., pip install .)

    - name: Run Pytest unit tests
      run: |
        pytest tests/unit/

    - name: Run Calibration Notebook
      env:
        # Environment variables for papermill parameters, if needed by the notebook
        DATA_FILE_PATH: data/sample_logs.csv # Path relative to project root
        PRED_REPS_ERROR_THRESHOLD: "1.0"
        FATIGUE_R2_THRESHOLD: "0.20"
        DEFAULT_1RM_ERROR_THRESHOLD: "0.15"
        CI: "true" # To enable CI-specific behavior in notebook (like sys.exit)
        PAPPERMILL_EXECUTION: "true" # Another common flag for notebook to detect CI run
      run: |
        # The notebook 'notebooks/verification/calibrate_algorithm.ipynb' is designed
        # to create its own dummy data if DATA_FILE_PATH is not found.
        # Therefore, explicit creation of a dummy CSV here is not strictly necessary
        # as long as the notebook's fallback works as intended in the CI environment.
        papermill notebooks/verification/calibrate_algorithm.ipynb output_report.ipynb
        # Papermill will exit with a non-zero status if the notebook kernel dies or if
        # the notebook code calls sys.exit(N) where N != 0.

    - name: Upload Notebook Report (Optional)
      if: always() # Run this step even if previous steps fail, to get the report
      uses: actions/upload-artifact@v3
      with:
        name: calibration-report-${{ matrix.python-version }}
        path: output_report.ipynb
